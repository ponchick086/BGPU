import java.io.File;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

public class XMLParser extends JFrame {
    private JTree tree;
    
    public XMLParser() {
        setTitle("XML Parser");
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("XML");
        tree = new JTree(root);
        
        JScrollPane scrollPane = new JScrollPane(tree);
        add(scrollPane);
        
        setVisible(true);
    }
    
    public void parseXML(File file) {
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(file);
            
            Element rootElement = document.getDocumentElement();
            DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(rootElement.getTagName());
            
            tree.setModel(new javax.swing.tree.DefaultTreeModel(rootNode));
            
            parseElement(rootElement, rootNode);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void parseElement(Element element, DefaultMutableTreeNode parentNode) {
        NodeList nodeList = element.getChildNodes();
        
        for (int i = 0; i < nodeList.getLength(); i++) {
            Node node = nodeList.item(i);
            
            if (node.getNodeType() == Node.ELEMENT_NODE) {
                Element childElement = (Element) node;
                DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(childElement.getTagName());
                
                parentNode.add(childNode);
                
                parseElement(childElement, childNode);
            }
        }
    }
    
    public static void main(String[] args) {
        XMLParser parser = new XMLParser();
        File file = new File("example.xml"); // Замените на путь к вашему XML-файлу
        parser.parseXML(file);
    }
}

/*
В этом примере создается окно приложения с компонентом Swing JTree, в котором будет отображаться содержимое XML-файла. 
Метод `parseXML` выполняет парсинг XML-файла с использованием DOM-парсера и создает дерево элементов, которое затем отображается в компоненте JTree. 
Метод `parseElement` рекурсивно обходит элементы XML-файла и создает соответствующие узлы дерева.
*/
